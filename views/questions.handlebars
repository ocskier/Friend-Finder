

  <div class="container">

    <div class="jumbotron">
      <h1 class="text-center">
        <span class="fa fa-fire"></span>Matchmaker</h1>
      <hr>
      <h2 class="text-center">Add your Profile</h2>
      <br>
      <div class="text-center">
        <a href="/friends">
          <button class="btn btn-lg btn-primary">
            <span class="fa fa-list-alt"></span> View People</button>
        </a>
        <a href="/">
          <button class="btn btn-lg btn-default">
            <span class="fa fa-home"></span>
          </button>
        </a>
      </div>
    </div>
    <div class="row">
      
      <div class="col-lg-6">
        <form>
          <div class="row">
            <div class="col">
              <input id="firstName" type="text" class="form-control" placeholder="First name">
            </div>
            <div class="col">
              <input id="lastName" type="text" class="form-control" placeholder="Last name">
            </div>
          </div>
          <br>
          <button type="submit" class="btn btn-primary" id="add-btn">Submit</button>
        </form>
      </div>
      
      <div class="col-lg-6">
        <!-- Reservation Page -->
            <div class="card">
                <div class="card-header" style="text-align: center;">
                    Strongly Disagree = 0  <----------------->  Strongly Agree = 10
                </div>
            </div>
            {{#each quests}}

                  <div class="card">
                      <div class="card-header" style="text-align: center;">
                        {{question}}
                      </div>
                        <form style= "position: relative; margin: 50px 5px;">
                          <input id={{@index}} type="range" name="foo" min="0" max="10">
                          <output for="foo" onforminput="value = foo.valueAsNumber;"></output>
                        </form>
                    </div>
            {{/each}}
        
      </div>
      
    </div>


    <footer class="footer">
      <div class="container">
        <p>
          <a href="/api/friends">API Table Link</a> |
          <a href="/api/match">API Match</a>
      </div>
    </footer>

  </div>

<!-- BELOW CODE IS CRITICAL. IT HANDLES HOW FORM DATA IS SENT TO OUR SERVER -->
<script type="text/javascript">
  // In this code below we create the Front-end JavaScript which "POSTS" our form data to our express server.
  // In essence, when the user hits submit, jQuery grabs all of the fields then sends a post request to our api
  // Our api recognizes the route (/api/tables)... and then runs the associated code (found in api-routes.js).
  // In this case the associated code "saves" the data to the table-data.js file or waitinglist-data.js file

  $("#add-btn").on("click", function(event) {
    event.preventDefault();

    // Here we grab the form elements
    
    var answers = [];
    for (i=0;i<10;i++) {
      answers.push($("#"+i).val());
    }
    var newFriend = {
      Name: $("#firstName").val().trim()+" "+$("#lastName").val().trim(),
      Answers: answers
    };

    console.log(newFriend);

    // This line is the magic. It"s very similar to the standard ajax function we used.
    // Essentially we give it a URL, we give it the object we want to send, then we have a "callback".
    // The callback is the response of the server. In our case, we set up code in api-routes that "returns" true or false
    // depending on if a tables is available or not.

    $.ajax({ url: "/api/friends", method: "GET" })
      .then(function(friendsData) {

        var newMatch = {};
        var lowScore = 100,nextScore=0;
        for (i=0;i<friendsData.length;i++) {
          for (j=0;j<10;j++) {
            nextScore+=Math.abs(friendsData[i].Answers[j]-newFriend.Answers[j]);
            console.log(nextScore);
          }
          if (nextScore<lowScore) {
            lowScore=nextScore;
            newMatch = friendsData[i];
          }
          nextScore=0;
        }

        $.post("/api/match", newMatch,
          function(data) {

            if (data) {
              alert("Yay! You have a match!");
              window.location.href="/match";
            }
        
        });
      });

    $.post("/api/friends", newFriend,
      function(data) {

        if (data) {
          alert("Yay! You have been added do the date list!");
        }

      });
    
  });


  var el, newPoint, newPlace, offset;
 
// Select all range inputs, watch for change
function modifyOffset() {
    var el, newPoint, newPlace, offset, siblings, k;
    width    = this.offsetWidth;
    newPoint = (this.value - this.getAttribute("min")) / (this.getAttribute("max") - this.getAttribute("min"));
    offset   = -1;
    if (newPoint < 0) { newPlace = 0;  }
    else if (newPoint > 1) { newPlace = width; }
    else { newPlace = width * newPoint + offset; offset -= newPoint;}
    siblings = this.parentNode.childNodes;
    for (var i = 0; i < siblings.length; i++) {
        sibling = siblings[i];
        if (sibling.id == this.id) { k = true; }
        if ((k == true) && (sibling.nodeName == "OUTPUT")) {
            outputTag = sibling;
        }
    }
    outputTag.style.left       = newPlace + "px";
    outputTag.style.marginLeft = offset + "%";
    outputTag.innerHTML        = this.value;
}

function modifyInputs() {
    
    var inputs = document.getElementsByTagName("input");
    for (var i = 0; i < inputs.length; i++) {
        if (inputs[i].getAttribute("type") == "range") {
            inputs[i].onchange = modifyOffset;

            // the following taken from http://stackoverflow.com/questions/2856513/trigger-onchange-event-manually
            if ("fireEvent" in inputs[i]) {
                inputs[i].fireEvent("onchange");
            } else {
                var evt = document.createEvent("HTMLEvents");
                evt.initEvent("change", false, true);
                inputs[i].dispatchEvent(evt);
            }
        }
    }
}

modifyInputs();

</script>
